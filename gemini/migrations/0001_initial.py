# Generated by Django 5.2 on 2025-04-20 21:09

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Adventure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('adventure_number', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('style_data', models.JSONField(default=dict)),
                ('world_data', models.JSONField(default=dict)),
                ('character_data', models.JSONField(default=list)),
                ('setting_data', models.JSONField(default=list)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='adventures', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'adventure_number')},
            },
        ),
        migrations.CreateModel(
            name='Character',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('gender', models.CharField(choices=[('female', 'Girl'), ('male', 'Boy'), ('not specified', 'Other')], max_length=100)),
                ('age', models.IntegerField()),
                ('species', models.CharField(max_length=255)),
                ('role', models.CharField(choices=[('protagonist', 'Main Character'), ('antagonist', 'Main Bad Character'), ('friend of a main character', 'Friend'), ('family member of a main character', 'Family'), ('main supporting character', 'Sidekick'), ('member of a team', 'Team Member'), ('advisor to a main or supporting character', 'Mentor'), ('side character not affiliated with any other character or group', 'Random Side Character'), ('character that is not integral to the story line', 'NPC')], max_length=100)),
                ('description', models.TextField()),
                ('about', models.TextField()),
                ('order', models.PositiveIntegerField(default=0)),
                ('adventure', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='characters', to='gemini.adventure')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Setting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('use_type', models.CharField(choices=[('private space', 'Private'), ('public space', 'Public')], max_length=100)),
                ('private_space_type', models.CharField(blank=True, choices=[('single family home', 'House'), ('multi-family building', 'Apartment'), ('very large family property', 'Estate'), ('a farm or farm house', 'Farm'), ('a ranch or ranch house', 'Ranch'), ('a castle or castle like structure', 'Castle'), ('a small home like a cottage', 'Cottage'), ('a small cabin', 'Cabin'), ('a treehouse or fort structure', 'Treehouse'), ('a private camp or camp ground area', 'Camp'), ('a private prison or jail', 'Prison'), ('a private military base or fort', 'Military Base'), ('a private research facility or lab', 'Lab')], max_length=100)),
                ('public_space_type', models.CharField(blank=True, choices=[('a park or public space', 'Park'), ('a playground', 'Playground'), ('a private art gallery or museum', 'Gallery'), ('a private library or book store', 'Library'), ('a hotel or motel', 'Hotel'), ('a resort or vacation destination', 'Resort'), ('a private/ public school or academy', 'School'), ('a private hospital or clinic', 'Hospital'), ('a neighborhood or city street', 'Street'), ('a pool or water park', 'Pool'), ('a sports field or stadium', 'Sports Field'), ('an open field', 'Field'), ('a stadium or arena', 'Stadium'), ('a central plaza or town square', 'Plaza'), ('a lake or body of water', 'Lake'), ('a beach', 'Beach'), ('a forest', 'Forest'), ('a desert', 'Desert'), ('a mountain', 'Mountain'), ('a cave', 'Cave'), ('a volcano', 'Volcano')], max_length=100)),
                ('general_location', models.CharField(blank=True, choices=[('on or near a beach', 'Coastal'), ('interior grassy plains', 'Plains'), ('on or near mountains', 'Mountainous'), ('in or next to a forest', 'Forest'), ('dessert', 'Dessert')], max_length=100)),
                ('specific_location', models.CharField(blank=True, choices=[('in a big city', 'City'), ('in a small town', 'Town'), ('in a rural area', 'Rural'), ('in a suburban area', 'Suburban'), ('in a small village', 'Village'), ('in a large village', 'Large Village'), ('away from any large cities', 'Remote'), ('hidden', 'Hidden')], max_length=100)),
                ('weather', models.CharField(blank=True, choices=[('mild most of the time', 'Temperate'), ('very little to no rain', 'Dry'), ('rains all the time', 'Rainy'), ('snows all the time', 'Snowy'), ('very cold all the time', 'Cold'), ('very hot all the time', 'Hot'), ('hot and humid', 'Tropical'), ('cold and dry', 'Polar')], max_length=100)),
                ('name', models.CharField(blank=True, max_length=100)),
                ('about', models.TextField()),
                ('order', models.PositiveIntegerField(default=0)),
                ('adventure', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='settings', to='gemini.adventure')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Story',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prompt', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('outline', models.TextField(blank=True)),
                ('title', models.CharField(blank=True, max_length=255)),
                ('summary', models.TextField(blank=True, null=True)),
                ('input_token_count', models.IntegerField(default=0, null=True)),
                ('output_token_count', models.IntegerField(default=0, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('error', models.TextField(blank=True)),
                ('audio', models.FileField(blank=True, null=True, upload_to='story_audio/')),
                ('audio_voice', models.CharField(blank=True, max_length=100, null=True)),
                ('adventure', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stories', to='gemini.adventure')),
            ],
            options={
                'verbose_name_plural': 'Stories',
            },
        ),
        migrations.CreateModel(
            name='StoryContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('raw_content', models.JSONField(default=dict)),
                ('story', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='content', to='gemini.story')),
            ],
            options={
                'verbose_name': 'Story Content',
                'verbose_name_plural': 'Story Contents',
            },
        ),
        migrations.CreateModel(
            name='StoryImages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cover_image', models.ImageField(blank=True, null=True, upload_to='story_images/')),
                ('story', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='story_images', to='gemini.story')),
            ],
        ),
        migrations.CreateModel(
            name='Style',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('age_group', models.CharField(choices=[('3 through 6', '3 to 6'), ('5 through 8', '5 to 8'), ('7 through 11', '7 to 11'), ('10 through 13', '10 to 13'), ('13 through 18', '13+')], max_length=100)),
                ('gender', models.CharField(choices=[('female', 'Girl'), ('male', 'Boy'), ('all', 'Both')], max_length=100)),
                ('genre', models.CharField(choices=[('educational', 'Learning'), ('set in the real world', 'Real Life'), ('historical fiction', 'History'), ('fantasy', 'Fantasy'), ('science fiction', 'Sci-Fi'), ('mystery', 'Mystery'), ('scary', 'Spooky')], max_length=100)),
                ('tone', models.CharField(choices=[('humourous', 'Funny'), ('whimsical', 'Silly'), ('serious', 'Serious'), ('dramatic', 'Dramatic'), ('like a TED talk', 'Educational'), ('very descriptive and artistic', 'Engaging')], max_length=100)),
                ('adventure', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='style', to='gemini.adventure')),
            ],
        ),
        migrations.CreateModel(
            name='World',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100)),
                ('temporal', models.CharField(choices=[('in the past', 'Past'), ('in the present', 'Present'), ('in the future', 'Future')], max_length=100)),
                ('general', models.TextField()),
                ('backstory', models.TextField()),
                ('current_events', models.TextField()),
                ('adventure', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='world', to='gemini.adventure')),
            ],
        ),
        migrations.CreateModel(
            name='ChapterImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('part_key', models.CharField(max_length=20)),
                ('chapter_key', models.CharField(max_length=20)),
                ('image', models.ImageField(upload_to='chapter_images/')),
                ('text_marker', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('story_images', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chapter_images', to='gemini.storyimages')),
            ],
            options={
                'ordering': ['part_key', 'chapter_key'],
                'unique_together': {('story_images', 'part_key', 'chapter_key')},
            },
        ),
    ]
